@id=4

### create a new instance1
POST {{$dotenv url}}/api/instances
Authorization: Bearer {{$dotenv jwt}}
Content-Type: application/json

{
  "host": "{{$dotenv instance1_host}}",
  "port": {{$dotenv instance1_port}},
  "password": "{{$dotenv instance1_pass}}"
}

### create a new instance2
POST {{$dotenv url}}/api/instances
Authorization: Bearer {{$dotenv jwt}}
Content-Type: application/json

{
  "host": "{{$dotenv instance2_host}}",
  "port": {{$dotenv instance2_port}},
  "password": "{{$dotenv instance2_pass}}"
}

### lists all available instances
GET {{$dotenv url}}/api/instances
Authorization: Bearer {{$dotenv jwt}}

### updates the connection credentials to an instance
PATCH {{$dotenv url}}/api/instances/{{id}}
Authorization: Bearer {{$dotenv jwt}}
Content-Type: application/json

{
  "host": "{{$dotenv instance1_host}}",
  "port": {{$dotenv instance1_port}},
  "password": "{{$dotenv instance1_pass}}"
}

### stops an instance by its id
PATCH {{$dotenv url}}/api/instances/{{id}}/stop
Authorization: Bearer {{$dotenv jwt}}

### starts an instance by its id
PATCH {{$dotenv url}}/api/instances/{{id}}/start
Authorization: Bearer {{$dotenv jwt}}

### deletes an instance
DELETE {{$dotenv url}}/api/instances/{{id}}
Authorization: Bearer {{$dotenv jwt}}

### sends a raw command to the server
POST {{$dotenv url}}/api/instances/{{id}}/raw
Authorization: Bearer {{$dotenv jwt}}
Content-Type: application/json

{
  "words": ["mapList.list"]
}